# Server Configuration
PORT=8080
READ_TIMEOUT=30
WRITE_TIMEOUT=30
IDLE_TIMEOUT=120

# Database Configuration
{{if eq .DatabaseConfig.Type "postgresql"}}
{{if eq .DatabaseConfig.ConfigType "single"}}
DATABASE_URL=postgres://{{.DatabaseConfig.Username}}:{{.DatabaseConfig.Password}}@{{.DatabaseConfig.Host}}:{{.DatabaseConfig.Port}}/{{.DatabaseConfig.DatabaseName}}?sslmode={{.DatabaseConfig.SSLMode}}
{{else if eq .DatabaseConfig.ConfigType "read-write"}}
DATABASE_WRITE_URL=postgres://{{.DatabaseConfig.Username}}:{{.DatabaseConfig.Password}}@{{.DatabaseConfig.WriteHost}}:{{.DatabaseConfig.Port}}/{{.DatabaseConfig.DatabaseName}}?sslmode={{.DatabaseConfig.SSLMode}}
DATABASE_READ_URL=postgres://{{.DatabaseConfig.Username}}:{{.DatabaseConfig.Password}}@{{.DatabaseConfig.ReadHost}}:{{.DatabaseConfig.Port}}/{{.DatabaseConfig.DatabaseName}}?sslmode={{.DatabaseConfig.SSLMode}}
{{else if eq .DatabaseConfig.ConfigType "cluster"}}
DATABASE_CLUSTER_URLS={{range $index, $node := .DatabaseConfig.ClusterNodes}}{{if $index}},{{end}}postgres://{{$.DatabaseConfig.Username}}:{{$.DatabaseConfig.Password}}@{{$node}}:{{$.DatabaseConfig.Port}}/{{$.DatabaseConfig.DatabaseName}}?sslmode={{$.DatabaseConfig.SSLMode}}{{end}}
{{end}}
{{else if eq .DatabaseConfig.Type "mysql"}}
{{if eq .DatabaseConfig.ConfigType "single"}}
DATABASE_URL={{.DatabaseConfig.Username}}:{{.DatabaseConfig.Password}}@tcp({{.DatabaseConfig.Host}}:{{.DatabaseConfig.Port}})/{{.DatabaseConfig.DatabaseName}}?tls={{.DatabaseConfig.SSLMode}}
{{else if eq .DatabaseConfig.ConfigType "read-write"}}
DATABASE_WRITE_URL={{.DatabaseConfig.Username}}:{{.DatabaseConfig.Password}}@tcp({{.DatabaseConfig.WriteHost}}:{{.DatabaseConfig.Port}})/{{.DatabaseConfig.DatabaseName}}?tls={{.DatabaseConfig.SSLMode}}
DATABASE_READ_URL={{.DatabaseConfig.Username}}:{{.DatabaseConfig.Password}}@tcp({{.DatabaseConfig.ReadHost}}:{{.DatabaseConfig.Port}})/{{.DatabaseConfig.DatabaseName}}?tls={{.DatabaseConfig.SSLMode}}
{{else if eq .DatabaseConfig.ConfigType "cluster"}}
DATABASE_CLUSTER_URLS={{range $index, $node := .DatabaseConfig.ClusterNodes}}{{if $index}},{{end}}{{$.DatabaseConfig.Username}}:{{$.DatabaseConfig.Password}}@tcp({{$node}}:{{$.DatabaseConfig.Port}})/{{$.DatabaseConfig.DatabaseName}}?tls={{$.DatabaseConfig.SSLMode}}{{end}}
{{end}}
{{else if eq .DatabaseConfig.Type "mongodb"}}
{{if eq .DatabaseConfig.ConfigType "single"}}
DATABASE_URL=mongodb://{{.DatabaseConfig.Username}}:{{.DatabaseConfig.Password}}@{{.DatabaseConfig.Host}}:{{.DatabaseConfig.Port}}/{{.DatabaseConfig.DatabaseName}}{{if .DatabaseConfig.AuthSource}}?authSource={{.DatabaseConfig.AuthSource}}{{end}}
{{else if eq .DatabaseConfig.ConfigType "read-write"}}
DATABASE_WRITE_URL=mongodb://{{.DatabaseConfig.Username}}:{{.DatabaseConfig.Password}}@{{.DatabaseConfig.WriteHost}}:{{.DatabaseConfig.Port}}/{{.DatabaseConfig.DatabaseName}}{{if .DatabaseConfig.AuthSource}}?authSource={{.DatabaseConfig.AuthSource}}{{end}}
DATABASE_READ_URL=mongodb://{{.DatabaseConfig.Username}}:{{.DatabaseConfig.Password}}@{{.DatabaseConfig.ReadHost}}:{{.DatabaseConfig.Port}}/{{.DatabaseConfig.DatabaseName}}{{if .DatabaseConfig.AuthSource}}?authSource={{.DatabaseConfig.AuthSource}}{{end}}
{{else if eq .DatabaseConfig.ConfigType "cluster"}}
DATABASE_URL=mongodb://{{.DatabaseConfig.Username}}:{{.DatabaseConfig.Password}}@{{range $index, $node := .DatabaseConfig.ClusterNodes}}{{if $index}},{{end}}{{$node}}:{{$.DatabaseConfig.Port}}{{end}}/{{.DatabaseConfig.DatabaseName}}{{if .DatabaseConfig.ReplicaSet}}?replicaSet={{.DatabaseConfig.ReplicaSet}}{{end}}{{if .DatabaseConfig.AuthSource}}{{if .DatabaseConfig.ReplicaSet}}&{{else}}?{{end}}authSource={{.DatabaseConfig.AuthSource}}{{end}}
{{end}}
{{else}}
# Default PostgreSQL configuration
DATABASE_URL=postgres://username:password@localhost:5432/{{.ProjectName}}?sslmode=disable
{{end}}

{{if .RedisConfig.Enabled}}# Redis Configuration
REDIS_URL=redis://{{if .RedisConfig.Password}}:{{.RedisConfig.Password}}@{{end}}{{.RedisConfig.Host}}:{{.RedisConfig.Port}}{{if .RedisConfig.Database}}/{{.RedisConfig.Database}}{{end}}{{end}}

# JWT Configuration
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
JWT_EXPIRATION_HOURS=24

# CORS Configuration
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8080
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_ALLOWED_HEADERS=Content-Type,Authorization

# Rate Limiting
RATE_LIMIT_REQUESTS_PER_MINUTE=100

# Logging
LOG_LEVEL=info

# Optional: Config file path
# CONFIG_FILE=config.yaml